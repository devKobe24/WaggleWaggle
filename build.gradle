plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.kobe'
version = '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.core:jackson-annotations'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // Spring Web: 웹 애플리케이션 및 RESTful API 개발
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // Spring Data JPA: ORM을 통한 데이터베이스 접근
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // MySQL Driver: MySQL 데이터베이스 연결
    runtimeOnly 'com.mysql:mysql-connector-j'
    // Swagger (SpringDoc): API 문서 자동화
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    // Lombok: Getter, Setter, 생성자 등 보일러플레이트 코드 자동 생성
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // 테스트를 위한 의존성
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'com.h2database:h2'
}

tasks.named('test') {
    useJUnitPlatform()
}
